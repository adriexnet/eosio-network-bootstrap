version: "3.5"

services:
  bios:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: bios
    environment:
      EOS_PUB_KEY: "${EOS_PUB_KEY}"
      EOS_PRIV_KEY: "${EOS_PRIV_KEY}"
    volumes:
      - ../services/bios:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    depends_on:
      - "vault"
      - "wallet"
    ports:
      - 8888:8888
  validator1:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: validator1
    environment:
      EOS_PUB_KEY: "${EOS_PUB_KEY}"
      EOS_PRIV_KEY: "${EOS_PRIV_KEY}"
    volumes:
      - ../services/validator1:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    #entrypoint: ["sh", "-c", "while true; do echo 42; sleep 5; done"]
    #command: ["./wait-for-it.sh", "db:5432", "--", "python", "app.py"]
  validator2:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: validator2
    environment:
      EOS_PUB_KEY: "${EOS_PUB_KEY}"
      EOS_PRIV_KEY: "${EOS_PRIV_KEY}"
    volumes:
      - ../services/validator2:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
  validator3:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: validator3
    environment:
      EOS_PUB_KEY: "${EOS_PUB_KEY}"
      EOS_PRIV_KEY: "${EOS_PRIV_KEY}"
    volumes:
      - ../services/validator3:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
  boot:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: boot
    volumes:
      - ../services/boot:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
  writer:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: writer
    volumes:
      - ../services/writer:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    ports:
      - 8080:8080
  observer:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: observer
    volumes:
      - ../services/observer:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    ports:
      - 80:80
  wallet:
    build:
      target: local-stage
      context: ../
      dockerfile: ./Dockerfile
    container_name: wallet
    volumes:
      - ../services/wallet:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    depends_on:
      - "vault"
  vault:
    image: vault:1.4.3
    ports:
      - "8200:8200"
    container_name: vault
    volumes:
      - /tmp/vault/file:/vault/file:rw
      - ../services/vault/config:/vault/config:rw
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json
    environment:
      VAULT_API_ADDR: http://0.0.0.0:8200/
      # VAULT_LOCAL_CONFIG: ${VAULT_LOCAL_CONFIG}
      # VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      # VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
  middleware:
    container_name: middleware
    image: node:14.2.0
    ports:
      - "4200:4200"
    volumes:
      - ./modules/middleware:/app/node_modules
      - type: bind
        source: ../services/middleware
        target: /app
    working_dir: /app
    command: bash -c "yarn && yarn watch"
    environment:
      MIDDLEWARE_EOS_API_ENDPOINT: "${MIDDLEWARE_EOS_API_ENDPOINT}"
      MIDDLEWARE_EOS_API_CHAIN_ID: "${MIDDLEWARE_EOS_API_CHAIN_ID}"
      MIDDLEWARE_EOS_WRITER_PUB_KEY: "${MIDDLEWARE_EOS_WRITER_PUB_KEY}"
      MIDDLEWARE_EOS_WRITER_PRI_KEY: "${MIDDLEWARE_EOS_WRITER_PRI_KEY}"
